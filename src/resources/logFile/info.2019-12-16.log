Starting EposApplication on LAPTOP-9QSL8RE8 with PID 15184 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 43ms. Found 3 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 932 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.921 seconds (JVM running for 4.78)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 5 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 16624 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 39ms. Found 3 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 917 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.977 seconds (JVM running for 4.735)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 19400 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 41ms. Found 3 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 912 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.904 seconds (JVM running for 4.672)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 5 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 9788 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 40ms. Found 3 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1028 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 4.218 seconds (JVM running for 5.02)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 7764 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 131ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 31ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2681 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 6.93 seconds (JVM running for 8.136)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 6 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 10132 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 61ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1163 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 4.667 seconds (JVM running for 5.816)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 6 ms
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 2700 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 57ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1089 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 4.407 seconds (JVM running for 5.282)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 5 ms
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 11840 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 43ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 943 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.978 seconds (JVM running for 4.765)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
SQL Error: 1048, SQLState: 23000
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 7556 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 60ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1059 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 4.616 seconds (JVM running for 5.613)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 7 ms
SQL Error: 1048, SQLState: 23000
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 15592 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 43ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 907 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.891 seconds (JVM running for 4.649)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
SQL Error: 1048, SQLState: 23000
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 14596 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 43ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 978 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.824 seconds (JVM running for 4.621)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 6 ms
【创建订单】result=OrderDto(orderId=null, buyerName=林东填, buyerPhone=123456789012, buyerAddress=深圳, buyerOpenid=1101110, orderAmount=null, orderStatus=null, payStatus=null, createTime=null, updateTime=null, orderDetailList=[OrderDetail(detailId=1576498122281655377, orderId=1576498122204321522, productId=1, productName=皮蛋粥, productPrice=5.20, productQuantity=1, productIcon=http://xxx.jpg)])
