Starting EposApplication on LAPTOP-9QSL8RE8 with PID 15808 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 50ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1416 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 5.118 seconds (JVM running for 6.098)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 6 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 14624 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 55ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1101 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 4.362 seconds (JVM running for 5.646)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 5 ms
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 17240 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 42ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 892 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.81 seconds (JVM running for 4.578)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 5 ms
【创建订单】result=OrderDto(orderId=null, buyerName=林东填, buyerPhone=123456789012, buyerAddress=深圳, buyerOpenid=1101110, orderAmount=null, orderStatus=null, payStatus=null, createTime=null, updateTime=null, orderDetailList=[OrderDetail(detailId=1576552010899840618, orderId=1576552010818661913, productId=1, productName=皮蛋粥, productPrice=5.20, productQuantity=1, productIcon=http://xxx.jpg), OrderDetail(detailId=1576552011018783496, orderId=1576552010818661913, productId=2, productName=花生粥, productPrice=5.00, productQuantity=2, productIcon=http://xxx.jpg)])
Starting OrderServiceTest on LAPTOP-9QSL8RE8 with PID 3560 (started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 182ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Started OrderServiceTest in 5.894 seconds (JVM running for 6.991)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting OrderServiceTest on LAPTOP-9QSL8RE8 with PID 12532 (started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 156ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Started OrderServiceTest in 5.918 seconds (JVM running for 6.978)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 6920 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 42ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 880 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.783 seconds (JVM running for 4.566)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 14636 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 46ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1022 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.902 seconds (JVM running for 4.755)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
Starting OrderServiceTest on LAPTOP-9QSL8RE8 with PID 10868 (started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 159ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Started OrderServiceTest in 5.915 seconds (JVM running for 7.008)
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting OrderServiceTest on LAPTOP-9QSL8RE8 with PID 7856 (started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 152ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 16612 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 41ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 876 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.809 seconds (JVM running for 4.595)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 6 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 12404 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 44ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 891 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.879 seconds (JVM running for 4.613)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 2440 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 42ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 923 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.815 seconds (JVM running for 4.541)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 6768 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 43ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 891 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.996 seconds (JVM running for 4.825)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 13304 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 41ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 891 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.863 seconds (JVM running for 4.7)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 3 ms
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 12788 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 58ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1031 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 4.545 seconds (JVM running for 5.783)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 5 ms
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 1760 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 50ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1040 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 4.353 seconds (JVM running for 5.239)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 14732 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 50ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1063 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 4.693 seconds (JVM running for 5.535)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 6 ms
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 17260 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 56ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1031 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 4.356 seconds (JVM running for 5.176)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 4 ms
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
{dataSource-1} closed
Starting EposApplication on LAPTOP-9QSL8RE8 with PID 8140 (D:\IDEAProject\epos\target\classes started by voiceai in D:\IDEAProject\epos)
No active profile set, falling back to default profiles: default
No MyBatis mapper was found in '[com.dongtian.epos]' package. Please check your configuration.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 42ms. Found 4 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductCategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.dongtian.epos.repository.ProductInfoRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.29]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 891 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate Core {5.4.9.Final}
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
{dataSource-1} inited
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/sell'
Started EposApplication in 3.83 seconds (JVM running for 4.589)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 5 ms
